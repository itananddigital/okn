
#### 1Ô∏è‚É£ Clean up broken state

```bash
sudo dpkg --configure -a
sudo apt -f install
```

#### 2Ô∏è‚É£ Remove conflicting unixODBC packages

The Microsoft installer wants to replace files from these packages:

* `unixodbc`
* `unixodbc-common`
* `libodbcinst2`

Remove them:

```bash
sudo apt remove --purge unixodbc unixodbc-common libodbcinst2
sudo apt autoremove -y
```

> **Tip:** If you see warnings about dependent packages, remove those too (for example `libodbc1`).

#### 3Ô∏è‚É£ Clean cached .deb files

```bash
sudo apt clean
sudo rm -f /var/cache/apt/archives/odbc*
```

#### 4Ô∏è‚É£ Reinstall Microsoft ODBC

Now install again using Microsoft‚Äôs repo:

```bash
sudo ACCEPT_EULA=Y apt install -y msodbcsql18
```

(or the package you were installing, e.g. `odbcinst` or `msodbcsql17`).

This time there should be **no overwrite errors** because the conflicting UnixODBC libs are gone.

---

### ‚úÖ Verify

Check the driver:

```bash
odbcinst -j
odbcinst -q -d
```

You should see something like:

```
[ODBC Driver 18 for SQL Server]
```

---

### ‚ö° If You Still Need UnixODBC

Microsoft drivers **include** their own compatible unixODBC build,
so you usually don‚Äôt need to reinstall Ubuntu‚Äôs unixODBC.
If you do need it, install **after** Microsoft‚Äôs driver:

```bash
sudo apt install -y unixodbc
```

It will pull a version that no longer conflicts.

---

üí° **Summary**:
The safe solution is to **remove Ubuntu‚Äôs unixODBC packages first**,
then install Microsoft‚Äôs driver. Forcing dpkg alone will not solve the conflict.
